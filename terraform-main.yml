trigger:
  - none

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: PlanStage
  displayName: 'Terraform Plan'
  jobs:
  - template: terraform-template.yml  # Assuming 'terraform-template.yml' is a correctly defined YAML template

  - job: TerraformPlanJob
    displayName: 'Terraform Plan'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: TerraformTaskV3@3
      inputs:
        provider: 'azurerm'
        command: 'plan'
        workingDirectory: '$(Build.SourcesDirectory)/TerraformTest'
        environmentServiceNameAzureRM: 'POC-NVN'

- stage: ApplyStage
  displayName: 'Terraform Apply'
  jobs:
  - template: terraform-template.yml  # Assuming 'terraform-template.yml' is a correctly defined YAML template

  - job: TerraformPlanJob
    displayName: 'Terraform Apply'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: TerraformTaskV3@3
      displayName: 'Terraform Apply'
      inputs:
        provider: 'azurerm'
        command: 'apply'
        workingDirectory: '$(Build.SourcesDirectory)/TerraformTest'
        environmentServiceNameAzureRM: 'POC-NVN'

- stage: DestroyStage
  displayName: 'Terraform Destroy'
  jobs:
  - template: terraform-template.yml  # Assuming 'terraform-template.yml' is a correctly defined YAML template

  - job: TerraformPlanJob
    displayName: 'Terraform Destroy'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: TerraformTaskV3@3
      displayName: 'Terraform Destroy'
      inputs:
        provider: 'azurerm'
        command: 'destroy'
        workingDirectory: '$(Build.SourcesDirectory)/TerraformTest'
        environmentServiceNameAzureRM: 'POC-NVN'

